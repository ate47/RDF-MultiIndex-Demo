@prefix mdlc: <http://the-qa-company.com/modelcompiler/> .
@prefix lod: <https://linkedopendata.eu/entity/> .
@prefix mdcs: <http://the-qa-company.com/modelcustom/> .
@prefix search: <http://www.openrdf.org/contrib/lucenesail#> .

# Describe the endpoint server port
mdlc:main mdlc:serverPort 3030 .

# Describe the maximum time for a non-update query (in seconds), 0 = infinity
# mdlc:main mdlc:timeoutQuery 300 .

# Describe the maximum time for an update query (in seconds), 0 = infinity
# mdlc:main mdlc:timeoutUpdate 300 .

# Describe the storage mode of the endpoint
# mdlc:main mdlc:storageMode mdlc:endpointStoreStorage .

# Describe the loading method of the HDT, using LOAD or MAP
# mdlc:main mdlc:hdtReadMode mdlc:hdtLoadReadMode .

# Describe the loading specs of the HDT
#mdlc:main mdlc:hdtSpec "bitmaptriples.index.others=spo,sop,pso,pos,ops,osp;bitmaptriples.index.noFoQ=true;bitmaptriples.sequence.disk.location=qendpoint/bitmaptriples;qendpoint.mergejoin=true;bitmaptriples.index.allowOldOthers=true" .
mdlc:main mdlc:hdtSpec "bitmaptriples.sequence.disk.location=qendpoint/bitmaptriples;qendpoint.mergejoin=true;bitmaptriples.index.others=spo,sop,pso,pos,ops,osp;bitmaptriples.index.noFoQ=true;bitmaptriples.index.allowOldOthers=true" .

# Describe the default split for native store storages
# mdlc:main mdlc:rdfStoreSplit 1000 .

# Enable to show the time of the executed queries
# mdlc:main mdlc:option mdlc:debugShowTime .

# Enable to show the plan of the executed queries
# mdlc:main mdlc:option mdlc:debugShowPlan .

# Set the dump location for the askDump functions, by default "dump" inside the root directory is used
mdlc:main mdlc:dumpLocation "${locationHDT}dump"^^mdlc:parsedString .

# Describe custom strings for the mdlc:parsedString format, will be available with ${key}
mdlc:main mdlc:parsedStringParam [ mdlc:paramKey "luceneEvalMode" ; mdlc:paramValue "NATIVE" ] .
mdlc:main mdlc:parsedStringParam [ mdlc:paramKey "luceneWktFields" ; mdlc:paramValue "http://nuts.de/geometry https://linkedopendata.eu/prop/direct/P127" ] .

# One index
mdlc:main mdlc:node _:fullLuceneNode .

# All text lucene node
_:fullLuceneNode mdlc:type mdlc:luceneNode ;
            # Describe the location of the lucene directory, you can use mdlc:parsedString for template strings
            mdlc:dirLocation "${locationNative}lucene"^^mdlc:parsedString ;
            # Define custom parameters, here the wkt fields for Geo-SPARQL
            mdlc:luceneParam [
                mdlc:paramKey "wktFields" ;
                mdlc:paramValue "${luceneWktFields}"^^mdlc:parsedString ;
            ] ;
            # Define the reindex query for the lucene sail, the query should be ordered by ?s
            mdlc:luceneReindexQuery "SELECT * {?s ?p ?o}" ; # order by ?s is useless because we only have one HDT, so the ?s are in the same order
            # Describe the evaluation mode of the queries, for native or endpointStore storage, use NATIVE
            mdlc:luceneEvalMode "${luceneEvalMode}"^^mdlc:parsedString ;
            search:indexid mdcs:Common .
